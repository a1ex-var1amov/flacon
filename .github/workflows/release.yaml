name: Build and Release Binary

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build and Upload
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for git describe

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Get version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION"

    - name: Build for multiple platforms
      run: |
        # Set version variables
        VERSION=${{ steps.get_version.outputs.version }}
        COMMIT_SHA=${{ github.sha }}
        BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S')
        
        # Create dist directory
        mkdir -p dist
        
        # Build for Linux AMD64
        echo "Building for Linux AMD64..."
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build \
          -ldflags "-X github.com/a1ex-var1amov/flacon/version.Version=${VERSION} -X github.com/a1ex-var1amov/flacon/version.CommitSHA=${COMMIT_SHA} -X github.com/a1ex-var1amov/flacon/version.BuildTime=${BUILD_TIME}" \
          -o dist/flacon-linux-amd64 .
        
        # Build for Linux ARM64
        echo "Building for Linux ARM64..."
        GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build \
          -ldflags "-X github.com/a1ex-var1amov/flacon/version.Version=${VERSION} -X github.com/a1ex-var1amov/flacon/version.CommitSHA=${COMMIT_SHA} -X github.com/a1ex-var1amov/flacon/version.BuildTime=${BUILD_TIME}" \
          -o dist/flacon-linux-arm64 .
        
        # Build for macOS AMD64
        echo "Building for macOS AMD64..."
        GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build \
          -ldflags "-X github.com/a1ex-var1amov/flacon/version.Version=${VERSION} -X github.com/a1ex-var1amov/flacon/version.CommitSHA=${COMMIT_SHA} -X github.com/a1ex-var1amov/flacon/version.BuildTime=${BUILD_TIME}" \
          -o dist/flacon-darwin-amd64 .
        
        # Build for macOS ARM64
        echo "Building for macOS ARM64..."
        GOOS=darwin GOARCH=arm64 CGO_ENABLED=0 go build \
          -ldflags "-X github.com/a1ex-var1amov/flacon/version.Version=${VERSION} -X github.com/a1ex-var1amov/flacon/version.CommitSHA=${COMMIT_SHA} -X github.com/a1ex-var1amov/flacon/version.BuildTime=${BUILD_TIME}" \
          -o dist/flacon-darwin-arm64 .
        
        # Build for Windows AMD64
        echo "Building for Windows AMD64..."
        GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build \
          -ldflags "-X github.com/a1ex-var1amov/flacon/version.Version=${VERSION} -X github.com/a1ex-var1amov/flacon/version.CommitSHA=${COMMIT_SHA} -X github.com/a1ex-var1amov/flacon/version.BuildTime=${BUILD_TIME}" \
          -o dist/flacon-windows-amd64.exe .
        
        # Build for Windows ARM64
        echo "Building for Windows ARM64..."
        GOOS=windows GOARCH=arm64 CGO_ENABLED=0 go build \
          -ldflags "-X github.com/a1ex-var1amov/flacon/version.Version=${VERSION} -X github.com/a1ex-var1amov/flacon/version.CommitSHA=${COMMIT_SHA} -X github.com/a1ex-var1amov/flacon/version.BuildTime=${BUILD_TIME}" \
          -o dist/flacon-windows-arm64.exe .
        
        # Make Linux binaries executable
        chmod +x dist/flacon-linux-*
        
        # List built binaries
        echo "Built binaries:"
        ls -la dist/

    - name: Create checksums
      run: |
        cd dist
        for file in flacon-*; do
          sha256sum "$file" > "$file.sha256"
        done
        echo "Checksums created:"
        ls -la *.sha256

    - name: Create Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Create release using GitHub CLI
        gh release create ${{ steps.get_version.outputs.version }} \
          --title "flacon ${{ steps.get_version.outputs.version }}" \
          --notes "## flacon ${{ steps.get_version.outputs.version }}
        
        A simple Kubernetes reconnaissance tool for security assessments in containerized environments.
        
        ### Downloads
        
        **Linux:**
        - [flacon-linux-amd64](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/flacon-linux-amd64) (AMD64)
        - [flacon-linux-arm64](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/flacon-linux-arm64) (ARM64)
        
        **macOS:**
        - [flacon-darwin-amd64](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/flacon-darwin-amd64) (AMD64)
        - [flacon-darwin-arm64](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/flacon-darwin-arm64) (ARM64)
        
        **Windows:**
        - [flacon-windows-amd64.exe](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/flacon-windows-amd64.exe) (AMD64)
        - [flacon-windows-arm64.exe](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/flacon-windows-arm64.exe) (ARM64)
        
        ### Installation
        
        \`\`\`bash
        # Download and make executable (Linux/macOS)
        curl -L -o flacon https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/flacon-\$(uname -s | tr '[:upper:]' '[:lower:]')-\$(uname -m)
        chmod +x flacon
        
        # Verify checksum
        curl -L -o flacon.sha256 https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.version }}/flacon-\$(uname -s | tr '[:upper:]' '[:lower:]')-\$(uname -m).sha256
        sha256sum -c flacon.sha256
        \`\`\`
        
        ### Usage
        
        \`\`\`bash
        # Run reconnaissance
        ./flacon
        
        # Show version
        ./flacon version
        
        # Show help
        ./flacon --help
        \`\`\`" \
          --draft=false \
          --prerelease=false

    - name: Upload Release Assets
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Upload all binaries and checksums
        gh release upload ${{ steps.get_version.outputs.version }} \
          dist/flacon-linux-amd64 \
          dist/flacon-linux-amd64.sha256 \
          dist/flacon-linux-arm64 \
          dist/flacon-linux-arm64.sha256 \
          dist/flacon-darwin-amd64 \
          dist/flacon-darwin-amd64.sha256 \
          dist/flacon-darwin-arm64 \
          dist/flacon-darwin-arm64.sha256 \
          dist/flacon-windows-amd64.exe \
          dist/flacon-windows-amd64.exe.sha256 \
          dist/flacon-windows-arm64.exe \
          dist/flacon-windows-arm64.exe.sha256
